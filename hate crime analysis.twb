<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='hate_crimes' inline='true' name='federated.1qimmqj0i9s8j019t1xui1obg87e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hate_crimes' name='textscan.0ijqi0p15lxesl13x53pr13yrr04'>
            <connection class='textscan' directory='D:/Viz 1_proj_tableau' filename='hate_crimes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ijqi0p15lxesl13x53pr13yrr04' name='hate_crimes.csv' table='[hate_crimes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='median_household_income' ordinal='1' />
            <column datatype='real' name='share_unemployed_seasonal' ordinal='2' />
            <column datatype='real' name='share_population_in_metro_areas' ordinal='3' />
            <column datatype='real' name='share_population_with_high_school_degree' ordinal='4' />
            <column datatype='real' name='share_non_citizen' ordinal='5' />
            <column datatype='real' name='share_white_poverty' ordinal='6' />
            <column datatype='real' name='gini_index' ordinal='7' />
            <column datatype='real' name='share_non_white' ordinal='8' />
            <column datatype='real' name='share_voters_voted_trump' ordinal='9' />
            <column datatype='real' name='hate_crimes_per_100k_splc' ordinal='10' />
            <column datatype='real' name='avg_hatecrimes_per_100k_fbi' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ijqi0p15lxesl13x53pr13yrr04' name='hate_crimes.csv' table='[hate_crimes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='median_household_income' ordinal='1' />
            <column datatype='real' name='share_unemployed_seasonal' ordinal='2' />
            <column datatype='real' name='share_population_in_metro_areas' ordinal='3' />
            <column datatype='real' name='share_population_with_high_school_degree' ordinal='4' />
            <column datatype='real' name='share_non_citizen' ordinal='5' />
            <column datatype='real' name='share_white_poverty' ordinal='6' />
            <column datatype='real' name='gini_index' ordinal='7' />
            <column datatype='real' name='share_non_white' ordinal='8' />
            <column datatype='real' name='share_voters_voted_trump' ordinal='9' />
            <column datatype='real' name='hate_crimes_per_100k_splc' ordinal='10' />
            <column datatype='real' name='avg_hatecrimes_per_100k_fbi' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_household_income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_household_income]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>median_household_income</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_unemployed_seasonal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_unemployed_seasonal]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_unemployed_seasonal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_population_in_metro_areas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_population_in_metro_areas]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_population_in_metro_areas</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_population_with_high_school_degree</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_population_with_high_school_degree]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_population_with_high_school_degree</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_non_citizen</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_non_citizen]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_non_citizen</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_white_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_white_poverty]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_white_poverty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gini_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gini_index]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>gini_index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_non_white</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_non_white]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_non_white</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_voters_voted_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_voters_voted_trump]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_voters_voted_trump</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hate_crimes_per_100k_splc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hate_crimes_per_100k_splc]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>hate_crimes_per_100k_splc</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_hatecrimes_per_100k_fbi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_hatecrimes_per_100k_fbi]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>avg_hatecrimes_per_100k_fbi</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='hate_crimes.csv' datatype='table' name='[__tableau_internal_object_id__].[hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C]' role='measure' type='quantitative' />
      <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
      <column caption='Gini Index' datatype='real' name='[gini_index]' role='measure' type='quantitative' />
      <column caption='Hate Crimes Per 100K Splc' datatype='real' name='[hate_crimes_per_100k_splc]' role='measure' type='quantitative' />
      <column caption='Median Household Income' datatype='integer' name='[median_household_income]' role='measure' type='quantitative' />
      <column caption='Share Non Citizen' datatype='real' name='[share_non_citizen]' role='measure' type='quantitative' />
      <column caption='Share Non White' datatype='real' name='[share_non_white]' role='measure' type='quantitative' />
      <column caption='Share Population In Metro Areas' datatype='real' name='[share_population_in_metro_areas]' role='measure' type='quantitative' />
      <column caption='Share Population With High School Degree' datatype='real' name='[share_population_with_high_school_degree]' role='measure' type='quantitative' />
      <column caption='Share Unemployed Seasonal' datatype='real' name='[share_unemployed_seasonal]' role='measure' type='quantitative' />
      <column caption='Share Voters Voted Trump' datatype='real' name='[share_voters_voted_trump]' role='measure' type='quantitative' />
      <column caption='Share White Poverty' datatype='real' name='[share_white_poverty]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Attribute' name='[attr:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_white_poverty]' derivation='Attribute' name='[attr:share_white_poverty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Avg' name='[avg:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hate_crimes_per_100k_splc]' derivation='Avg' name='[avg:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_non_citizen]' derivation='Avg' name='[avg:share_non_citizen:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_non_white]' derivation='Avg' name='[avg:share_non_white:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_white_poverty]' derivation='Avg' name='[avg:share_white_poverty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hate_crimes_per_100k_splc]' derivation='None' name='[none:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gini_index]' derivation='Sum' name='[sum:gini_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hate_crimes_per_100k_splc]' derivation='Sum' name='[sum:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_household_income]' derivation='Sum' name='[sum:median_household_income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_non_citizen]' derivation='Sum' name='[sum:share_non_citizen:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_non_white]' derivation='Sum' name='[sum:share_non_white:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_population_in_metro_areas]' derivation='Sum' name='[sum:share_population_in_metro_areas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_population_with_high_school_degree]' derivation='Sum' name='[sum:share_population_with_high_school_degree:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_unemployed_seasonal]' derivation='Sum' name='[sum:share_unemployed_seasonal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_voters_voted_trump]' derivation='Sum' name='[sum:share_voters_voted_trump:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_white_poverty]' derivation='Sum' name='[sum:share_white_poverty:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[attr:avg_hatecrimes_per_100k_fbi:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:avg_hatecrimes_per_100k_fbi:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:avg:median_household_income:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:gini_index:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:gini_index:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:hate_crimes_per_100k_splc:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_population_in_metro_areas:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_population_in_metro_areas:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:hate_crimes_per_100k_splc:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:hate_crimes_per_100k_splc:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_in_metro_areas:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[attr:share_white_poverty:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:share_white_poverty:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_non_white:qk:1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_white_poverty:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:share_non_white:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_non_white:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_voters_voted_trump:qk:1]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_white:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[attr:share_voters_voted_trump:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_non_citizen:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_voters_voted_trump:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_voters_voted_trump:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:share_non_citizen:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_non_citizen:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_population_with_high_school_degree:qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[attr:share_population_with_high_school_degree:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:gini_index:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_population_with_high_school_degree:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_with_high_school_degree:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:median_household_income:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[ctd:median_household_income:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:avg:median_household_income:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[cum:sum:share_white_poverty:qk:1]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:median_household_income:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{e598160c-449c-46ad-a738-54313624c393}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]' />
            <field name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='hate_crimes.csv' id='hate_crimes.csv_92B2651CF88D4231A4B34678EECC983C'>
            <properties context=''>
              <relation connection='textscan.0ijqi0p15lxesl13x53pr13yrr04' name='hate_crimes.csv' table='[hate_crimes#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='integer' name='median_household_income' ordinal='1' />
                  <column datatype='real' name='share_unemployed_seasonal' ordinal='2' />
                  <column datatype='real' name='share_population_in_metro_areas' ordinal='3' />
                  <column datatype='real' name='share_population_with_high_school_degree' ordinal='4' />
                  <column datatype='real' name='share_non_citizen' ordinal='5' />
                  <column datatype='real' name='share_white_poverty' ordinal='6' />
                  <column datatype='real' name='gini_index' ordinal='7' />
                  <column datatype='real' name='share_non_white' ordinal='8' />
                  <column datatype='real' name='share_voters_voted_trump' ordinal='9' />
                  <column datatype='real' name='hate_crimes_per_100k_splc' ordinal='10' />
                  <column datatype='real' name='avg_hatecrimes_per_100k_fbi' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' sorted bar chart splc and fbi'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hatecrime chart after normalizing</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</rows>
        <cols>([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk] + [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk])</cols>
      </table>
      <simple-id uuid='{57067AE8-BA28-4D12-8A9C-4E15EBCEF3FB}' />
    </worksheet>
    <worksheet name='Shared non white and white poverty'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Shared non white and white poverty vs crime</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Non White' datatype='real' name='[share_non_white]' role='measure' type='quantitative' />
            <column caption='Share White Poverty' datatype='real' name='[share_white_poverty]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_non_white]' derivation='Sum' name='[sum:share_non_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_white_poverty]' derivation='Sum' name='[sum:share_white_poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <slices>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='755' />
                <format attr='maxwidth' value='755' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_white:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk] + [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_white:qk])</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]</cols>
      </table>
      <simple-id uuid='{00E3F3FB-F285-46F4-9A17-7A56A20FA7BE}' />
    </worksheet>
    <worksheet name='by states'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hate crime by states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
              <size column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[Latitude (generated)]</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C2F36733-73EB-48D3-9CB1-4B4A60F27DC0}' />
    </worksheet>
    <worksheet name='cluster white poverty and unemployement seasonal'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Clustering shared unemployed seasonal and shared white poverty labeling hate crime</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{e598160c-449c-46ad-a738-54313624c393}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Unemployed Seasonal' datatype='real' name='[share_unemployed_seasonal]' role='measure' type='quantitative' />
            <column caption='Share White Poverty' datatype='real' name='[share_white_poverty]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_unemployed_seasonal]' derivation='Sum' name='[sum:share_unemployed_seasonal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_white_poverty]' derivation='Sum' name='[sum:share_white_poverty:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' />
              <lod column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]' />
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:AdhocCluster:1:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]' z-order='2' />
            <reference-line axis-column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{1D005785-B30F-4C20-8195-E04296A5192C}' />
    </worksheet>
    <worksheet name='crime vs states'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hate crime vs states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
              <size column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' />
              <text column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7E4B592A-2B1F-40E7-8F3D-4D0482EBE894}' />
    </worksheet>
    <worksheet name='different factors in certain states'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Average hate crime vs different factors in certain states</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Non Citizen' datatype='real' name='[share_non_citizen]' role='measure' type='quantitative' />
            <column caption='Share Non White' datatype='real' name='[share_non_white]' role='measure' type='quantitative' />
            <column caption='Share Population In Metro Areas' datatype='real' name='[share_population_in_metro_areas]' role='measure' type='quantitative' />
            <column caption='Share Unemployed Seasonal' datatype='real' name='[share_unemployed_seasonal]' role='measure' type='quantitative' />
            <column caption='Share Voters Voted Trump' datatype='real' name='[share_voters_voted_trump]' role='measure' type='quantitative' />
            <column caption='Share White Poverty' datatype='real' name='[share_white_poverty]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_non_citizen]' derivation='Sum' name='[sum:share_non_citizen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_non_white]' derivation='Sum' name='[sum:share_non_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_population_in_metro_areas]' derivation='Sum' name='[sum:share_population_in_metro_areas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_unemployed_seasonal]' derivation='Sum' name='[sum:share_unemployed_seasonal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_voters_voted_trump]' derivation='Sum' name='[sum:share_voters_voted_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_white_poverty]' derivation='Sum' name='[sum:share_white_poverty:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_white:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_in_metro_areas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_voters_voted_trump:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_white_poverty:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Virginia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[:Measure Names]</column>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[Multiple Values]</rows>
        <cols>([federated.1qimmqj0i9s8j019t1xui1obg87e].[:Measure Names] * [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk])</cols>
      </table>
      <simple-id uuid='{D6C3E6B3-AED8-4142-8719-E9143A60B25A}' />
    </worksheet>
    <worksheet name='gini vs crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hate crime vs Gini index around all states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column caption='Gini Index' datatype='real' name='[gini_index]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gini_index]' derivation='Sum' name='[sum:gini_index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qimmqj0i9s8j019t1xui1obg87e].[Longitude (generated)]' field-type='quantitative' max='-1247426.9104098752' min='-18652293.689622641' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qimmqj0i9s8j019t1xui1obg87e].[Latitude (generated)]' field-type='quantitative' max='8526986.7071830295' min='-853320.01312419213' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:gini_index:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
              <size column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' />
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:gini_index:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[Latitude (generated)]</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CEB4C56F-5ABC-4C7A-BDB0-EBCCD0452638}' />
    </worksheet>
    <worksheet name='hate crime bar chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hate crime per 100k  bar chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</rows>
        <cols>([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk] + [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk])</cols>
      </table>
      <simple-id uuid='{07D41072-E5E3-4359-A22F-39EFA32883CD}' />
    </worksheet>
    <worksheet name='hate crime state map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Initial visualization of Hate crime by states </run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column caption='Hate Crimes Per 100K Splc' datatype='real' name='[hate_crimes_per_100k_splc]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hate_crimes_per_100k_splc]' derivation='Sum' name='[sum:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:hate_crimes_per_100k_splc:qk]' included-values='in-range'>
            <min>0.067446801000000001</min>
            <max>1.52230172</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:hate_crimes_per_100k_splc:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]</column>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:hate_crimes_per_100k_splc:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:hate_crimes_per_100k_splc:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</rows>
        <cols>([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk] + [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:hate_crimes_per_100k_splc:qk])</cols>
      </table>
      <simple-id uuid='{8A55E333-CCF8-4A2E-8C33-EC6B39589A2A}' />
    </worksheet>
    <worksheet name='median house income vs crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hatecrime vs various factos in certain states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column caption='Median Household Income' datatype='integer' name='[median_household_income]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Non Citizen' datatype='real' name='[share_non_citizen]' role='measure' type='quantitative' />
            <column caption='Share Population In Metro Areas' datatype='real' name='[share_population_in_metro_areas]' role='measure' type='quantitative' />
            <column caption='Share Population With High School Degree' datatype='real' name='[share_population_with_high_school_degree]' role='measure' type='quantitative' />
            <column caption='Share Unemployed Seasonal' datatype='real' name='[share_unemployed_seasonal]' role='measure' type='quantitative' />
            <column caption='Share Voters Voted Trump' datatype='real' name='[share_voters_voted_trump]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_household_income]' derivation='Sum' name='[sum:median_household_income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_non_citizen]' derivation='Sum' name='[sum:share_non_citizen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_population_in_metro_areas]' derivation='Sum' name='[sum:share_population_in_metro_areas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_population_with_high_school_degree]' derivation='Sum' name='[sum:share_population_with_high_school_degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_unemployed_seasonal]' derivation='Sum' name='[sum:share_unemployed_seasonal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_voters_voted_trump]' derivation='Sum' name='[sum:share_voters_voted_trump:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Virginia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</column>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='923' />
                <format attr='maxwidth' value='923' />
                <format attr='minheight' value='102' />
                <format attr='maxheight' value='102' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:median_household_income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_with_high_school_degree:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_in_metro_areas:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_voters_voted_trump:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:median_household_income:qk] + ([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_unemployed_seasonal:qk] + ([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_with_high_school_degree:qk] + ([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_population_in_metro_areas:qk] + ([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk] + ([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk] + [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_voters_voted_trump:qk]))))))</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]</cols>
      </table>
      <simple-id uuid='{928B9534-32BE-4250-B868-80ACA60E5CE1}' />
    </worksheet>
    <worksheet name='non citz - non white -crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Share Non Citizen vs Non White with crime rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrime Per 100K Fbi' datatype='integer' datatype-customized='true' name='[Calculation_196469554798772225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([avg_hatecrimes_per_100k_fbi])' />
            </column>
            <column-instance column='[share_non_citizen]' derivation='Avg' name='[avg:share_non_citizen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_non_white]' derivation='Avg' name='[avg:share_non_white:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Non Citizen' datatype='real' name='[share_non_citizen]' role='measure' type='quantitative' />
            <column caption='Share Non White' datatype='real' name='[share_non_white]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_196469554798772225]' derivation='Sum' name='[sum:Calculation_196469554798772225:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' />
              <lod column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:share_non_white:qk]</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[avg:share_non_citizen:qk]</cols>
      </table>
      <simple-id uuid='{71A873E5-44C1-4689-AAD9-54B0ACF9EF27}' />
    </worksheet>
    <worksheet name='shared voters and non ciz vs crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>hate crime vs shared trump voters and shared non citizens</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.1qimmqj0i9s8j019t1xui1obg87e' />
          </datasources>
          <datasource-dependencies datasource='federated.1qimmqj0i9s8j019t1xui1obg87e'>
            <column caption='Avg Hatecrimes Per 100K Splc' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Non Citizen' datatype='real' name='[share_non_citizen]' role='measure' type='quantitative' />
            <column caption='Share Voters Voted Trump' datatype='real' name='[share_voters_voted_trump]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_non_citizen]' derivation='Sum' name='[sum:share_non_citizen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_voters_voted_trump]' derivation='Sum' name='[sum:share_voters_voted_trump:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='814' />
                <format attr='maxwidth' value='814' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_voters_voted_trump:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='814' />
                <format attr='maxwidth' value='814' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='814' />
                <format attr='maxwidth' value='814' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_voters_voted_trump:qk] + [federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_citizen:qk])</rows>
        <cols>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:avg_hatecrimes_per_100k_fbi:qk]</cols>
      </table>
      <simple-id uuid='{1A49BC1F-4CE4-4D2F-9F14-DF121CE92C75}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='hate crime analysis' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='22'>Hate Crime Data analysis by visualization in Tableau</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5ead7' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='344' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='border-style' value='solid' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4149' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4979' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83714' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='15456'>
              <flipboard active-id='12' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='hate crime raw data visulized from both Fbi and Splc' captured-sheet='hate crime state map' id='1' />
                  <story-point caption='Side to side  visulization after normalizing' captured-sheet='hate crime bar chart' id='2' />
                  <story-point caption='Sorted' captured-sheet=' sorted bar chart splc and fbi' id='3' />
                  <story-point caption='hate crime by all states' captured-sheet='by states' id='4' />
                  <story-point caption='Gini index vs crime rate' captured-sheet='gini vs crime' id='5' />
                  <story-point caption='cluster by white poverty and seasonal unemployment ' captured-sheet='cluster white poverty and unemployement seasonal' id='6' />
                  <story-point caption='Bubble map by states vs crime' captured-sheet='crime vs states' id='7' />
                  <story-point caption='Non citizen -non white share ' captured-sheet='non citz - non white -crime' id='8' />
                  <story-point caption='shared trump voters and non citizen ' captured-sheet='shared voters and non ciz vs crime' id='9' />
                  <story-point caption='shared non white and white poverty' captured-sheet='Shared non white and white poverty' id='10' />
                  <story-point caption='various factors vs crime in certain states' captured-sheet='different factors in certain states' id='11' />
                  <story-point caption='median household income vs other factors' captured-sheet='median house income vs crime' id='12' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3F3A1CB4-ECD2-436D-AB7E-4BF05B23E248}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='hate crime state map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[:Measure Names]</field>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DDC7F62-E3A9-4029-9E4C-2D00537EED54}' />
    </window>
    <window class='worksheet' name='hate crime bar chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{34CF5085-A83C-406D-8D9C-2AA7B127CC05}' />
    </window>
    <window class='worksheet' name=' sorted bar chart splc and fbi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:share_non_white:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{151275CD-2269-46A7-8788-9C381B2AAA7D}' />
    </window>
    <window class='worksheet' maximized='true' name='by states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B00C28D7-1736-44E9-ABFE-6B23828B02CF}' />
    </window>
    <window class='worksheet' name='gini vs crime'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:gini_index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:gini_index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2A33C14-BCDB-427A-81CA-2972FCB29CD5}' />
    </window>
    <window class='worksheet' name='cluster white poverty and unemployement seasonal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F76785FC-BE61-46AB-914D-15D6FB74A6A2}' />
    </window>
    <window class='worksheet' name='crime vs states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{736EE5DF-DFA2-4164-A621-AFDE3C2F28E0}' />
    </window>
    <window class='worksheet' name='non citz - non white -crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[sum:Calculation_196469554798772225:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1517A10B-8744-4DD3-A308-DC9A29D67DE5}' />
    </window>
    <window class='worksheet' name='shared voters and non ciz vs crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{256DFCEA-AA2A-413E-856F-88CEB8121851}' />
    </window>
    <window class='worksheet' name='Shared non white and white poverty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D802D7D8-E518-41C0-BB82-550418B2F19F}' />
    </window>
    <window class='worksheet' name='different factors in certain states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E7BD4A51-0BCE-4B72-9A01-4632862457AE}' />
    </window>
    <window class='worksheet' name='median house income vs crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[:Measure Names]</field>
            <field>[federated.1qimmqj0i9s8j019t1xui1obg87e].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{04AEACA7-F617-4418-8FA2-743D4321B098}' />
    </window>
    <window class='dashboard' name='hate crime analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8E84A5AB-7388-428E-85A3-D0D73751B8D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' sorted bar chart splc and fbi' width='192'>
      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
      QPDEc1Qf+//v3ZSa33fDDgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Shared non white and white poverty' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='by states' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cluster white poverty and unemployement seasonal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='crime vs states' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='different factors in certain states' width='192'>
      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
      a/8fDqrSmRQNSv8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='gini vs crime' width='192'>
      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
      2/D/ARSL7Kj7IbGfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='hate crime analysis' width='192'>
      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
      M+hvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='hate crime bar chart' width='192'>
      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
      SURBVP+HW73hEOnTjQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='hate crime state map' width='192'>
      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
      AIILzf8HKykTSdI9AMEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='median house income vs crime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='non citz - non white -crime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='shared voters and non ciz vs crime' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
